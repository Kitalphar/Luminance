<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Luminance.Controls">

    <!--This file is for standard control settings-->
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Controls.xaml"/>
        <ResourceDictionary Source="/Themes/Design.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Textblock Bases-->

    <Style x:Key="PrimaryTextColorTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
    </Style>

    <Style x:Key="SecondaryTextColorTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
    </Style>

    <Style x:Key="InvertedTextColorTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource InvertedTextColor}"/>
    </Style>

    <Style x:Key="WarningTextColorTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WarningTextColor}"/>
    </Style>

    <Style x:Key="PrimaryTextColorXCenterYCenterTextBlock" TargetType="TextBlock" BasedOn="{StaticResource PrimaryTextColorTextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="SecondaryTextColorXCenterYCenterTextBlock" TargetType="TextBlock" BasedOn="{StaticResource SecondaryTextColorTextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="InvertedTextColorXCenterYCenterTextBlock" TargetType="TextBlock" BasedOn="{StaticResource InvertedTextColorTextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="WarningTextColorXCenterYCenterTextBlock" TargetType="TextBlock" BasedOn="{StaticResource WarningTextColorTextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    
    <!--Titles-->
    
    <Style x:Key="StartupWindowTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource PrimaryTextColorXCenterYCenterTextBlock}">
        <Setter Property="Text" Value="Luminance"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-XLarge}"/>
    </Style>

    <Style x:Key="MainWindowTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource PrimaryTextColorXCenterYCenterTextBlock}">
        <Setter Property="Text" Value="Luminance"/>
        <Setter Property="Margin" Value="0,0,170,0"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-XLarge}"/>
    </Style>

    <Style x:Key="SetupViewTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource PrimaryTextColorXCenterYCenterTextBlock}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Huge}"/>
    </Style>

    <Style x:Key="SetupViewSubTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource PrimaryTextColorXCenterYCenterTextBlock}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize-XLarge}"/>
    </Style>

    <Style x:Key="SetupViewWarningSubTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource WarningTextColorXCenterYCenterTextBlock}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize-XLarge}"/>
    </Style>

    <Style x:Key="TransactionsViewExplanationText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Small}"/>
        <Setter Property="Grid.ColumnSpan" Value="99"/>
    </Style>
    
    <!--TextBlock Styles-->
    
    <Style x:Key="AccountsBalanceTextBoxStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-XLarge}"/>
    </Style>

    <Style x:Key="TopCategoriesTextBoxStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Large}"/>
    </Style>

    <Style x:Key="AccountNameTextBoxStyle" TargetType="TextBlock" BasedOn="{StaticResource AccountsBalanceTextBoxStyle}">
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
    </Style>

    <Style x:Key="AccountsCurrentBalanceTextBoxStyle" TargetType="TextBlock" BasedOn="{StaticResource AccountsBalanceTextBoxStyle}">
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
    </Style>

    <Style x:Key="TopCategoryNameTextBoxStyle" TargetType="TextBlock" BasedOn="{StaticResource TopCategoriesTextBoxStyle}">
    <Setter Property="TextAlignment" Value="Left"/>
    <Setter Property="Margin" Value="10,0,10,0"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
    </Style>

    <Style x:Key="TopCategoryBalanceTextBoxStyle" TargetType="TextBlock" BasedOn="{StaticResource TopCategoriesTextBoxStyle}">
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
    </Style>

    <!--Labels-->
    
    <Style x:Key="BaseLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
    </Style>

    <Style x:Key="SetupViewLabelStyle" TargetType="Label" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Medium}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TransactionsInputFieldsLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Small}"/>
    </Style>
    
    <!--Stackpanels-->

    <Style x:Key="TransactionsInputFieldsStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="VerticalAlignment" Value="top"/>
    </Style>
    
    <!--ComboBoxes-->
    
    <Style x:Key="CurrencyComboBoxStyle" TargetType="ComboBox" >
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Currency_code}" Margin="0,0,5,0"/>
                        <TextBlock Text=" - " Margin="0,0,5,0"/>
                        <TextBlock Text="{Binding Currency_Name}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LanguageComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource InputFieldBgColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource InvertedTextColor}"/>
    </Style>

    <Style x:Key="TransactionViewComboBoxBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource InputFieldBgColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource InvertedTextColor}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Medium}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
    </Style>


    <!--Checkboxes-->

    <Style x:Key="SetupWindowCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <!--Buttons-->

    <Style x:Key="SetupViewContinueButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="35"/>
        <!--<Setter Property="Background" Value="{DynamicResource SecondaryAppBgColor}"/>-->
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryAppBorderColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource InvertedTextColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Window Control Buttons-->
    <Style x:Key="BaseWindowControlButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Medium}"/>
        <Setter Property="FontWeight" Value="ExtraBold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowControlButtonColor}"/>
    </Style>

    <Style x:Key="MinimizeWindowControlButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseWindowControlButtonStyle}">
        <Setter Property="Content" Value="&#xE921;"/>
    </Style>

    <Style x:Key="MaximizeWindowControlButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseWindowControlButtonStyle}">
        <Setter Property="Content" Value="&#xE923;"/>
    </Style>

    <Style x:Key="CloseWindowControlButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseWindowControlButtonStyle}">
        <Setter Property="Content" Value="&#xE7E8;"/>
    </Style>

    <!--Radio Buttons-->
    <Style x:Key="MenuButtonTheme" 
           TargetType="{x:Type RadioButton}" 
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Background="{TemplateBinding Background}">

                            <TextBlock Text="{TemplateBinding Property=Content}"
                                   VerticalAlignment="Center"
                                   Margin="50, 0, 0, 0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Height" Value="50"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSize-Large}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource MenuButtonActiveStateColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--DataGrids-->

    <Style x:Key="TransactionsDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource SecondaryAppBgColor}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource PrimaryAppBgColor}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource PrimaryAppBorderColor}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource PrimaryAppBorderColor}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Medium}"/>
        
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{DynamicResource SecondaryAppBgColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MenuButtonActiveStateColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="{DynamicResource SecondaryAppBgColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryAppBorderColor}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="Padding" Value="5,0,0,5"/>
                    <Setter Property="FontWeight" Value="DemiBold"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
    
    